x
stars(x)
x<-1:5
stars(x)
?id.
polygon(1:5, 3:6)
polygon(1:5, 4:9)
polygon(1:5, 4:8)
p<-polygon(1:5, 4:8)
layout(p)
show(p)
polygon(1:5, 4:8)
?erase
erase()
erase.screen()
colors()
x<-rnorm(10)
y<-rnorm(10)
x
plot(x, y)
copy and paste data into text file
skim R manual (read.csv)
manipulate matrix (reshape package)
lubridate package ?Date
x<-rnorm(10)
y<-rnorm(10)
plot(x, y)
opar<-par()
par(bg="lightyellow", col.axis="blue", mar=c(4, 4, 2.5, 0.25)), xlim=c(-2, 2), ylim=c(-2,2), pch=22, col="red", bg="yellow")
par(bg="lightyellow", col.axis="blue", mar=c(4, 4, 2.5, 0.25)))
par(bg="lightyellow", col.axis="blue", mar=c(4, 4, 2.5, 0.25)
plot(x, y, xlab="Ten random values", ylab="Ten other values", xlim=c(-2, 2), ylim=c(-2, 2), pch=22, col="red", bg="yellow", bty="1", tcl=-25, las=1, cex=1:5)
plot(x, y, xlab="Ten random values", ylab="Ten other values", xlim=c(-2, 2), ylim=c(-2, 2), pch=22, col="red", bg="yellow", tcl=-25, las=1, cex=1:5)
plot(x, y, xlab="Ten random values", ylab="Ten other values", xlim=c(-2, 2), ylim=c(-2, 2), pch=22, col="red", bg="yellow", bty="1", tcl=-25, las=1, cex=1:5)
opar<-par()
par(bg="lightgray", mar=c(2:5, 1:5, 2:5, 0:25))
par(bg="lightgray", mar=c(2.5, 1.5, 2.5, 0.25))
plot(x, y, type="n", xlab="", ylab="", xlim=c(-2, 2), ylim=c(-2, 2), xaxt="n", yaxt="n")
x<-rnorm(10)
y<rnorm(10)
y<-rnorm(10)
par(bg="lightgray", mar=c(2.5, 1.5, 2.5, 0.25))
plot(x, y, type="n", xlab="", ylab="", xlim=c(-2, 2), ylim=c(-2, 2), xaxt="n", yaxt="n")
rect(-3, -3, 3, 3, col="cornsilk")
points(x, y, pch=10, col="red", cex=2)
axis(side=1, c(-2, 0, 2), tcl=-0.2, labels=FALSE)
axis(side=2, -1:1, tcl=-0.2, labels-FALSE)
axis(side=2, -1:1, tcl=-0.2, labels=FALSE)
title("How to customize a plot with R(ter)")
title("How to customize a plot with R(ter)", font.main=4, adj=1, cex.main=1)
mtext("Ten random values", side=1, line=1, at=1, cex=0.9, font=3)
mtext("Ten other values", line=0.5, at=-1.8, cex=0.9, font=3)
mtext(c(-2, 0, 2), side=1, las=1, at=c(-2, 0, 2), line=0.3, col="blue", cex=0.9)
mtext(-1:1, side=2, las=1, at=-1:1, line=0.2, col="ble", cex=0.9)
mtext(-1:1, side=2, las=1, at=-1:1, line=0.2, col="blue", cex=0.9)
par(opar)
stripplot(7, 3)
library(lattice)
n<-seq(5, 45, 5)
x<- rnorm(sum(n))
y<-factor(rep(n, n), labels=paste("n = ", n))
desnityplot(~ x, y)
densityplot(~ x, y)
densityplot(~x|y, panel=function(x, ...) {}
lskdfj
densityplot(~x|y, panel=function(x, ...) {panel.densityplot(x, col="DarkOliveGreen", ...) panel.mathdensity(dmath=dnorm, args=list(mean=mean(x), sd=sd(x)), col="darkblue")})
densityplot(~ x | y,panel = function(x, ...) {panel.densityplot(x, col="DarkOliveGreen", ...)panel.mathdensity(dmath=dnorm,args=list(mean=mean(x), sd=sd(x)),col="darkblue")})
desnityplot(~ x | y)
densityplot(~x}y)
densityplot(~x|y)
data(quakes)
mini <- min(quakes$depth)
maxi <- max(quakes$depth)
int <- ceiling((maxi - mini)/9)
inf <- seq(mini, maxi, int)
quakes$depth.cat <- factor(floor(((quakes$depth-mini)/int)), labels=paste(inf, inf+int, sep="-"))
xplot(lat~long | depth.cat, data=quakes)
xyplot(lat~long | depth.cat, data=quakes)
quakes
install.packages
install.packages("knitr")
set.set(1410)
dsmall <- diamonds[sample(nrow(diamonds), 100),]
library(ggplot2)
library("ggplot2")
install.packages("ggplot2")
library(ggplot2)
dsmall <- diamonds[sample(nrow(diamonds), 100), ]
qplot(carat, price, data=dsmall, color=color)
qplot(carat, price, data=dsmall, shape=cut)
qplot(carat, price, data=diamonds, color=I(aplpha("red", 1/20)))
qplot(carat, price, data=diamonds, color=I(alpha("red", 1/20)))
qplot(carat, price, data=diamonds, color=I(alpha("black", 1/10)))
qplot(carat, price, data=diamonds, colour=I(alpha("black", 1/10)))
qplot(carat, price, data=dsmall, colour=I(alpha("black", 1/10)))
library(scales)
qplot(carat, price, data=dsmall, colour=I(alpha("black", 1/10)))
qplot(carat, price, data=diamonds, colour=I(alpha("black", 1/10)))
qplot(carat, price, data=diamonds, colour=I(alpha("red", 1/10)))
qplot(carat, price, data=dsmall, geom=c("point", "smooth"))
qplot(carat, price, data=diamonds, geom=c("point", "smooth"))
qplot(carat, price, data=diamonds, geom=c("point", "smooth"), se=fase)
qplot(carat, price, data=diamonds, geom=c("point", "smooth"), se=FALSE)
library(mgcv)
qplot(carat, price, data=dsmall, geom=c("point", "smooth"), method="gam", formula=y~s(x))
qplot(carat, price, data = dsmall, geom = c("point", "smooth"),method="gam", formula= y ~ s(x, bs = "cs"))
diamonds
qplot(color, price/carat, data=diamonds, geom="jitter", color=Ialpha("black", 1/5))
qplot(color, price/carat, data=diamonds, geom="jitter", color=I(alpha("black", 1/5)))
qplot(color, price/carat, data=diamonds, geom="jitter", color=I(alpha("black", 1/50)))
qplot(color, price/carat, data=diamonds, geom="jitter", color=I(alpha("black", 1/500)))
qplot(carat, data=diamonds, geom="histogram")
qplot(carat, data=diamonds, geom="density")
qplot(carat, data=diamonds, geom="histogram", binwidth=0.0001)
install.packages("ggplot2")
dsmall <- diamonds[sample(nrow(diamonds), 100), ]
library(ggplot2)
dsmall <- diamonds[sample(nrow(diamonds), 100), ]
qplot(carat, data=diamonds, geom="histogram", fill=color)
year<-function(x)as.POSIXlt(x)$year + 1900
qplot(unemploy/pop, uempmed, data=economics, geom=c("point", "path"))
qplot(unemploy/pop, uempmed, data=economics, geom="path", color=year(date))+scale_area()
library(diamonds)
install.packages("diamonds")
diamonds
library(diamonds)
install.packages("diamonds")
data(diamonds)
library(ggplot2)
data(diamonds)
diamonds
p <- ggplot(diamonds, aes(carat, price, colour=cut))
p <- p +  layer(geom="point")
p
p <- ggplot(diamonds, aes(x = carat))
q <- q + layer(geom = "bar", geom_params = list(fill="steelblue"), stat = "bin", stat_params = list(binwidth=2))
p <- p + layer(geom = "bar", geom_params = list(fill="steelblue"), stat = "bin", stat_params = list(binwidth=2))
p
geom_histogram(binwidth=2, fill="steelblue")
p
ggplot(msleep, aes(sleep_rem / sleep_total, awake))+geom_point()
qplot(sleep_rem / sleep_total, awake, data=msleep)
qplot(sleep_rem / sleep_total, awake, data=msleep) + geom_smooth()
qplot(sleep_rem / sleep_total, awake, data=msleep, geom=c("point", "smooth")
)
p <- ggplot(msleep, aes(sleep_rem / sleep_total, awake))
summary(p)
p <- p+geom_point()
sumary(p)
summar(p)
summary(p)
bestfit <- geom_smooth(method = "lm", se=F)
bestfit <- geom_smooth(method = "lm", se=F, color=alpha("steelblue", 0.5), size=2)
bestfit <- geom_smooth(method = "lm", se=F, color="steelblue", size=2)
bestfit <- geom_smooth(method = "lm", se=F, color="red", size=2)
qplot(sleep_rem, sleep_total, data=msleep) + bestfit
qplot(awake, brainwt, data=msleep, log="y") + bestfit
qplot(bodywt, brainwt, data=msleep, log="xy") + bestfit
qplot(bodywt, brainwt, log="xy") + bestfit
p <- ggplot(mtcars, aes(mpg, wt, color=cyl)) + geom_point()
p
mtcars <- transform(mtcars, mpg=mpg^2)
p %+% mtcars
p
p <- ggplot(mtcars)
summary(p)
p <- p + aes(wt, hp)
p
summary(p)
p <- ggplot(mtcars ,aes(x=mpg, y=wt))
p + geom_point()
p + geom_point(aes(color=factor(cyl)))
p + geom_point(aes(color=cyl))
p + geom_point(aes(y=disp))
p <- ggplot(mtcars, aes(mpg, wt))
p + geom_point(color="darkblue")
p + geom_point(aes(color="darkblue"))
q <- ggplot(Oxboys, aes(age, height, group=Subject)) + geom_line()
q <- ggplot(0xboys, aes(age, height, group=Subject)) + geom_line()
data(Oxboys)
library(Oxboys)
library(ggplot2)
data(Oxboys)
data(0xboys)
qplot(cut, ..density.., data=diamodns, geom="bar")
qplot(cut, ..density.., data=diamonds, geom="bar")
qplot(cut, ..density.., data=diamonds, geom="bar", group=1)
xgrid <- with(df, seq(min(x), max(x), length=50))
interp <- data.frame(x=xgrid, y=approx(df$x, df$y, xout=xgrid)$y, color=approx(df$x, df$color, xout=xgrid)$y)
xgrid <- with(df, seq(min(x), max(x), length=50))
x <- 1:3
xgrid <- with(df, seq(min(x), max(x), length=50))
ggplot(diamonds, aes(carat))
geom_histogram(aes(y=..density..), binwidth=0.1)
ggplot(diamonds, aes(carat))
qplot(carat, ..density.., data=diamonds, geom="histogram", binwidth=0.1)
d <- ggplot(diamonds, aes(carat)) + xlim(0.3)
d <- ggplot(diamonds, aes(carat)) + xlim(0, 3)
d + stat_bin(aes(ymax = ..count..), binwidth = 0.1, geom="area")
d + stat_bin(aes(size=..density..), binwidth=0.1, geom="point", position="identity")
d + stat_bin(aes(y=1, fill=..count..), binwidth=0.1, geom="tile", position="identity")
?library
?install
?INSTALL
?REMOVE
?INSTALL
install.packages(lubridate)
install.packages("lubridate")
library(lubridate)
weather1 = readWeather1(system.file("raw/weather.txt", package="weatherPkg"), TRUE, "%b/%Y/%d")
library(weatherPkg)
weather1 = readWeather1(system.file("raw/weather.txt", package="weatherPkg"), TRUE, "%b/%Y/%d")
library(reshape)
install.packages("reshape")
library(reshape)
weather1 = readWeather1(system.file("raw/weather.txt", package="weatherPkg"), TRUE, "%b/%Y/%d")
weather1 = readWeather1(system.file("raw/weather.txt", package="weatherPkg"), TRUE)
debug(readWeather1)
weather1 = readWeather1(system.file("raw/weather.txt", package="weatherPkg"), TRUE)
head(dframe)
head(mframe)
head(stringDates)
q
debug(readWeather1)
weather1 = readWeather1(system.file("raw/weather.txt", package="weatherPkg"), TRUE)
mframe
weather1 = readWeather1(system.file("raw/weather.txt", package="weatherPkg"), TRUE)
library(weatherPkg)
weather1 = readWeather1(system.file("raw/weather.txt", package="weatherPkg"), TRUE)
library(reshape)
weather1 = readWeather1(system.file("raw/weather.txt", package="weatherPkg"), TRUE)
debug(readWeather1)
weather1 = readWeather1(system.file("raw/weather.txt", package="weatherPkg"), TRUE)
head(mframe)
library(devtools)
install_github("WilliamstownWeather", subdir="Rstuff/weatherPkg", username="michaelakane", password="eaglewing12")
install.packages("Rtools")
library("devtools")
install_github("WilliamstownWeather", subdir="Rstuff/weatherPkg", username="mjfwilliams")
setwd("Desktop/WilliamstownWeather/Rstuff/weatherPkg/inst/doc")
library(knitr)
knit2pdf("williamstownWeather.Rnw")
knit2pdf("williamstownWeather.Rnw")
knit2pdf("williamstownWeather.Rnw")
knit2pdf("williamstownWeather.Rnw")
knit2pdf("williamstownWeather.Rnw")
knit2pdf("williamstownWeather.Rnw")
2+2
2*2
knit2pdf("williamstownWeather.Rnw")
