\documentclass{article}
\usepackage{mathtools}
\usepackage{amsfonts}
\usepackage{subfig}
%\VignetteEngine{knitr}
%\VignetteIndexEntry{}

\begin{document}
\title{Random Portfolios}
\author{Mike Flynn, Angel Zhou, Dave Kane}
\maketitle

\section*{Introduction}

<<libraries, echo = FALSE, warning = FALSE, message = FALSE, error = FALSE>>=
library(ggplot2)
library(grid)
library(devtools)
library(base)
library(rgl)
library(wq)
library(reshape2)
load_all("..")
@

Imagine you have one thousand dollars that you want to invest in two stocks: General Electric (GE) and International Business Machines (IBM). You could invest 25 percent of your million dollars in GE and the remaining 75 percent in IBM, or, to present another scenario, you could halve your money and put five hundred thousand dollars into GE and five hundred thousand dollars into IBM. There is an endless amount of ways that you can invest one million dollars into the two stocks.

\begin{figure}[h]
<<figure1, echo = FALSE, fig.height = 3, fig.width = 5, cache = TRUE>>=
dat <- data.frame(IBM = 25, GE = 50)
p1 <- ggplot(data = dat, aes(x = IBM, y = GE)) + geom_point(size = 5) + scale_y_continuous(limits = c(-100, 100)) + scale_x_continuous(limits = c(-250, 250)) + theme_bw()

dat <- data.frame(IBM = 5000, GE = 1250)
p2 <- ggplot(data = dat, aes(x = IBM, y = GE)) + geom_point(size = 5)  + theme_bw() + scale_y_continuous(limits = c(-1500, 1500)) + scale_x_continuous(limits = c(-6000, 6000))

layOut(list(p1, 1, 1), list(p2, 1, 2))
@
\caption{Let's say your portfolio consists of 25 shares of IBM and 50 shares of GE. The plot on the left displays this coordinate in share space, meaning the x and y coordinates of the point represent the amount of shares invested in each stock. Alternatively, you can view the portfolio in dollar terms. This is done by multiplying the stock price by the number of shares, resulting in the total amount spent in each stock. The price of GE is currently at around 25 dollars apiece while the price of each IBM stock is approximately 200 dollars. Thus, 25 shares of IBM becomes 5,000 dollars and 50 shares of GE is valued at 1,250 dollars. The plot on the right displays the same portfolio as the one on the left, but plots the portfolio is in dollar space. This means that the x and y coordinates represent the total amount of money that you invested into each respective stock.}
\end{figure}

\begin{figure}[h]
<<figure2, echo = FALSE, fig.height = 3, fig.width = 5, cache = TRUE>>=
dat <- data.frame(IBM = .8, GE =.2)
p <- ggplot(data = dat, aes(x = IBM, y = GE)) + geom_point(size = 5) + theme_bw() + scale_y_continuous(limits = c(-.5, .5)) + scale_x_continuous(limits = c(-1, 1))
p
@
\caption{The same portfolio as that in Figure 1 is replotted in portion space. In other words, this figure displays the portfolio where the x and y coordinates represent the percentage of the total amount of money that is invested into each respective stock. To use the same example as before, since you spent 5,000 dollars on IBM and 1,250 dollars on GE, you expended a total of 6,250 dollars. $1250/6250 = 0.2$, so 20 percent of your budget is spent in GE. Transitively, and 80 percent is spent on IBM. These percentages are plotted in decimal form in the figure. In this document, we will be referring to portfolios plotted in portion space.}
\end{figure}

As mentioned before, there are an infinite amount of ways to split the invested money. Earlier we thought about dividing the money in dollar terms. Now let's think about it in percentages in decimal form. No matter how you split the money, whether you put .5 in IBM and .5 in GE, or .2 in IBM and .8 in GE, the two values must sum to 1, or 100 percent. In other words, this portfolio is fully invested; no money is put aside for other uses.
In order to visualize how all the possible portfolios would appear in a 2-D space, you can generate random weights, creating a random way of splitting the money. When generating random weights, the sum of the variables $x + y = 1$ and ${x, y} > 0$.

\begin{figure}[h]
<<figure3, echo = FALSE, fig.height = 3, fig.width = 5, cache = TRUE>>=
Amat = matrix(c(1,1), nrow = 1, ncol =2)
b = 1

set.seed(40)

w = hitandrun(A = Amat, b = b, n = 1000)
points = as.data.frame(t(w))
colnames(points) = c("GE", "IBM")

p1 <- ggplot(data = points, aes(x = GE, y = IBM))
p1 <- p1 + geom_point(size = 0.5) + scale_y_continuous(breaks = c(0, 0.75)) + scale_x_continuous(breaks = c(0, 0.75)) + theme(axis.line = element_line())
p1

w2 = hitandrun(A = Amat, b = b, n = 10000)
points2 = as.data.frame(t(w2))
colnames(points2) = c("GE", "IBM")

layOut(list(p1, 1, 1), list(p2, 1, 2))
@
\caption{1,000 random samples of two stocks were taken, where each stocks' value represents the percentage of the total money that is invested in each stock. The two percentages are represented in decimal form, thus summing to one. The result is a diagonal line from the points (0,1) to (1,0). Each point on this line represents a possible portfolio.}
\end{figure}

Now let's say that you want to add Coca-Cola (KO) to the stocks that you are investing in. Now that you have three stocks, you must generate three random weights that sum to 1. 
  
\begin{figure}[t]
<<figChunk1, echo=FALSE, fig.height = 3, fig.width = 5, cache =TRUE>>=
Amat2 = matrix(c(1,1,1), nrow = 1, ncol =3)
b2 = 1

w3 = hitandrun(A = Amat2, b = b2, n = 1000)
threeScenPoints = as.data.frame(t(w))
colnames(threeScenPoints) = c("GE", "IBM", "KO")

p1 <- ggplot(data = points, aes(x = GE, y = IBM))
p1 <- p1 + geom_point(size = 0.5) + scale_y_continuous(breaks = c(0, 0.75)) + scale_x_continuous(breaks = c(0, 0.75)) + theme_bw()
p1

w4 = hitandrun(A = Amat2, b = b2, n = 10000)
threeScenPoints2 = as.data.frame(t(w2))
colnames(threeScenPoints2) = c("GE", "IBM", "KO")

scatterTheme1 = theme(
  panel.background = NULL,
  panel.grid.major = element_blank(),
  panel.grid.minor = element_blank(),
  axis.title.x = element_blank(),
  axis.ticks.x = element_blank(),
  axis.text.x = element_blank(),
  plot.margin = unit(c(0.1,0.1,0.1,1.5), "lines")
)

scatterTheme2 = theme(
  panel.background = NULL,
  panel.grid.major = element_blank(),
  panel.grid.minor = element_blank(),
  plot.margin = unit(c(0.1,0.1,0.1,1.5), "lines")
)

scatterTheme3 = theme(
  panel.background = NULL,
  panel.grid.major = element_blank(),
  panel.grid.minor = element_blank(),
  axis.title.y = element_blank(),
  axis.ticks.y = element_blank(),
  axis.text.y = element_blank(),
  plot.margin = unit(c(0.1,0.5,0.1,0.1), "lines")
)

histTheme1 = theme(
  panel.background = element_blank(),
  panel.grid.major = element_blank(),
  panel.grid.minor = element_blank(),
  panel.border = element_blank(),
  axis.title = element_blank(),
  axis.ticks = element_blank(),
  axis.text = element_blank(),
  plot.margin = unit(c(0.1,0.05,0.1,3.5), "lines")
)

histTheme2 = theme(
  panel.background = element_blank(),
  panel.grid.major = element_blank(),
  panel.grid.minor = element_blank(),
  panel.border = element_blank(),
  axis.title = element_blank(),
  axis.ticks = element_blank(),
  axis.text = element_blank(),
  plot.margin = unit(c(0.1,0.325,0.1,0), "lines")
)

histTheme3 = theme(
  panel.background = element_blank(),
  panel.grid.major = element_blank(),
  panel.grid.minor = element_blank(),
  panel.border = element_blank(),
  axis.title.y = element_blank(),
  axis.ticks.y = element_blank(),
  axis.text.y = element_blank(),
  plot.margin = unit(c(0.1,0.1,0.1,0.1), "lines")
)

vp = function(x,y) viewport(layout.pos.row = x, layout.pos.col = y)
grid.newpage()
pushViewport(viewport(layout = grid.layout(3, 3, heights = unit(c(2.4,2.4,3), "cm"), widths = unit(c(4.5,3,3), "cm"))))
##, heights = unit(c(0.5, 5, 5, 5), "null")
p1 <- ggplot(data = threeScenPoints, aes(x = GE, y = KO))
p1 <- p1 + geom_point(size = .05) + scatterTheme2 + scale_y_continuous(breaks = c(0, 0.75)) + scale_x_continuous(breaks = c(0, 0.75))

p2 <- ggplot(data = threeScenPoints, aes(x = GE, y = IBM))
p2 <- p2 + geom_point(size = .05) + scatterTheme1 + scale_y_continuous(breaks = c(0, 0.75)) + scale_x_continuous(breaks = c(0, 0.75))

p3 <- ggplot(data = threeScenPoints, aes(x = IBM, y = KO))
p3 <- p3 + geom_point(size = .05) + scatterTheme3  + scale_x_continuous(breaks = c(0, 0.75))

h1 <- ggplot(data = threeScenPoints2, aes(x = GE))
h1 <- h1 + geom_histogram(binwidth = .125/2, fill = "white", color = "black")
h1 <- h1 + ylab("Counts") + histTheme1

h2 <- ggplot(data = threeScenPoints2, aes(x = IBM))
h2 <- h2 + geom_histogram(binwidth = .125/2, fill = "white", color = "black")
h2 <- h2 + ylab("Counts") + histTheme2

h3 <- ggplot(data = threeScenPoints2, aes(x = KO))
h3 <- h3 + geom_histogram(binwidth = .125/2, fill = "white", color = "black")
h3 <- h3 + ylab("Counts") + histTheme3 + scale_x_continuous(breaks = c(0, 0.75))
print(p1, vp = vp(3,1))
print(p2, vp = vp(2,1))
print(p3, vp = vp(3,2))
print(h1, vp = vp(1,1))
print(h2, vp = vp(2,2))
print(h3, vp = vp(3,3))
@
\caption{In the figure, 1,000 random portfolios were generated for each scatterplot, while the histograms consisted of 100,000 samples in order to increase resolution. Because each stock is exchangeable in the current scheme, all their weight distributions should be identical. For each stock, the probability density of its weight decreases linearly as the weight increases. This is because each variable is a function of the other. For example, let $x$ represent GE, let $y$ stand for IBM, and let $z$ be KO. We know that $z = 1 - (x+y)$. The most probable value of $(x+y)$ corresponds to the line $y= c-x$ with the most points on it, the longest line. As can be seen in the distributions, the longest such line is $y=1-x$, therefore the most probable value for $x+y$ is 1 and the most probable value for $z$ is 0, and likewise for $x$ and $y$.}
\end{figure}

\begin{figure}[t]
<<fiveByFiveGrid, echo=FALSE, fig.height = 3, fig.width = 5, cache =TRUE>>=
Amat = matrix(c(1,1,1,1,1), nrow = 1, ncol =5)
b = 1

## this sets the random number generator so we can have repeatable results
set.seed(40)

w = hitandrun(A = Amat, b = b, n = 1000)
points = as.data.frame(t(w))
colnames(points) = c("GE", "IBM", "KO", "GM", "MSFT")

library(rgl)
scatterTheme1 = theme(
  panel.background = NULL,
  panel.grid.major = element_blank(),
  panel.grid.minor = element_blank(),
  axis.title.x = element_blank(),
  axis.ticks.x = element_blank(),
  axis.text.x = element_blank(),
  plot.margin = unit(c(0.1,0.1,0.1,0.1), "lines")
)

scatterTheme2 = theme(
  panel.background = NULL,
  panel.grid.major = element_blank(),
  panel.grid.minor = element_blank(),
  plot.margin = unit(c(0.1,0.1,0.1,0.1), "lines")
)

scatterTheme3 = theme(
  panel.background = NULL,
  panel.grid.major = element_blank(),
  panel.grid.minor = element_blank(),
  axis.title.y = element_blank(),
  axis.ticks.y = element_blank(),
  axis.text.y = element_blank(),
  plot.margin = unit(c(0.1,0.1,0.1,0.1), "lines")
)

scatterTheme4 = theme(
  panel.background = NULL,
  panel.grid.major = element_blank(),
  panel.grid.minor = element_blank(),
  panel.border = element_blank(),
  axis.title = element_blank(),
  axis.ticks = element_blank(),
  axis.text = element_blank(),
  plot.margin = unit(c(0.1,0.1,0.1,0.1), "lines")
)

histTheme1 = theme(
  panel.background = element_blank(),
  panel.grid.major = element_blank(),
  panel.grid.minor = element_blank(),
  panel.border = element_blank(),
  axis.title = element_blank(),
  axis.ticks = element_blank(),
  axis.text = element_blank(),
  plot.margin = unit(c(0.1,0.1,0.1,0.1), "lines")
)

histTheme2 = theme(
  panel.background = element_blank(),
  panel.grid.major = element_blank(),
  panel.grid.minor = element_blank(),
  panel.border = element_blank(),
  axis.title = element_blank(),
  axis.ticks = element_blank(),
  axis.text = element_blank(),
  plot.margin = unit(c(0.1,0.1,0.1,0.1), "lines")
)

histTheme3 = theme(
  panel.background = element_blank(),
  panel.grid.major = element_blank(),
  panel.grid.minor = element_blank(),
  panel.border = element_blank(),
  axis.title.y = element_blank(),
  axis.ticks.y = element_blank(),
  axis.text.y = element_blank(),
  plot.margin = unit(c(0.1,0.1,0.1,0.1), "lines")
)

vp = function(x,y) viewport(layout.pos.row = x, layout.pos.col = y)
grid.newpage()
pushViewport(viewport(layout = grid.layout(5, 5, heights = unit(c(2.4,2.4,3), "cm"), widths = unit(c(4.5,3,3), "cm"))))
##, heights = unit(c(0.5, 5, 5, 5), "null")

p1 <- ggplot(data = points, aes(x = GE, y = KO))
p1 <- p1 + geom_point(size = .05) + scatterTheme1 + scale_y_continuous(breaks = c(0, 0.75)) + scale_x_continuous(breaks = c(0, 0.75))

p2 <- ggplot(data = points, aes(x = GE, y = IBM))
p2 <- p2 + geom_point(size = .05) + scatterTheme1 + scale_y_continuous(breaks = c(0, 0.75)) + scale_x_continuous(breaks = c(0, 0.75))

p3 <- ggplot(data = points, aes(x = IBM, y = KO))
p3 <- p3 + geom_point(size = .05) + scatterTheme4 + scale_y_continuous(breaks = c(0, 0.75)) + scale_x_continuous(breaks = c(0, 0.75))

p4 <- ggplot(data = points, aes(x = GE, y = GM))
p4 <- p4 + geom_point(size = .05) + scatterTheme1 + scale_y_continuous(breaks = c(0, 0.75)) + scale_x_continuous(breaks = c(0, 0.75))

p5 <- ggplot(data = points, aes(x = IBM, y = GM))
p5 <- p5 + geom_point(size = .05) + scatterTheme4 + scale_y_continuous(breaks = c(0, 0.75)) + scale_x_continuous(breaks = c(0, 0.75))

p6 <- ggplot(data = points, aes(x = KO, y = GM))
p6 <- p6 + geom_point(size = .05) + scatterTheme4 + scale_y_continuous(breaks = c(0, 0.75)) + scale_x_continuous(breaks = c(0, 0.75))

p7 <- ggplot(data = points, aes(x = GE, y = MSFT))
p7 <- p7 + geom_point(size = .05) + scatterTheme2 + scale_y_continuous(breaks = c(0, 0.75)) + scale_x_continuous(breaks = c(0, 0.75))

p8 <- ggplot(data = points, aes(x = IBM, y = MSFT))
p8 <- p8 + geom_point(size = .05) + scatterTheme3 + scale_y_continuous(breaks = c(0, 0.75)) + scale_x_continuous(breaks = c(0, 0.75))

p9 <- ggplot(data = points, aes(x = KO, y = MSFT))
p9 <- p9 + geom_point(size = .05) + scatterTheme3 + scale_y_continuous(breaks = c(0, 0.75)) + scale_x_continuous(breaks = c(0, 0.75))

p10 <- ggplot(data = points, aes(x = GM, y = MSFT))
p10 <- p10 + geom_point(size = .05) + scatterTheme3 + scale_y_continuous(breaks = c(0, 0.75)) + scale_x_continuous(breaks = c(0, 0.75))

h1 <- ggplot(data = points, aes(x = GE))
h1 <- h1 + geom_histogram(binwidth = .125/4, fill = "white", color = "black")
h1 <- h1 + ylab("Counts") + histTheme1

h2 <- ggplot(data = points, aes(x = IBM))
h2 <- h2 + geom_histogram(binwidth = .125/4, fill = "white", color = "black")
h2 <- h2 + ylab("Counts") + histTheme2

h3 <- ggplot(data = points, aes(x = KO))
h3 <- h3 + geom_histogram(binwidth = .125/4, fill = "white", color = "black")
h3 <- h3 + ylab("Counts") + histTheme2

h4 <- ggplot(data = points, aes(x = GM))
h4 <- h4 + geom_histogram(binwidth = .125/4, fill = "white", color = "black")
h4 <- h4 + ylab("Counts") + histTheme2

h5 <- ggplot(data = points, aes(x = MSFT))
h5 <- h5 + geom_histogram(binwidth = .125/4, fill = "white", color = "black")
h5 <- h5 + ylab("Counts") + histTheme3

print(p1, vp = vp(2,1))
print(p2, vp = vp(3,1))
print(p3, vp = vp(3,2))
print(p4, vp = vp(4,1))
print(p5, vp = vp(4,2))
print(p6, vp = vp(4,3))
print(p7, vp = vp(5,1))
print(p8, vp = vp(5,2))
print(p9, vp = vp(5,3))
print(p10, vp = vp(5,4))
print(h1, vp = vp(1,1))
print(h2, vp = vp(2,2))
print(h3, vp = vp(3,3))
print(h4, vp = vp(4,4))
print(h5, vp = vp(5,5))
print(h1, vp = vp(1,1))
print(h2, vp = vp(2,2))
print(h3, vp = vp(3,3))
@
\caption{1000 random samples}
\end{figure}

\end{document}